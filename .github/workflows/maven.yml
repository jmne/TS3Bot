name: Maven CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test project with Maven
        run: mvn -B package --file pom.xml


  publish-job:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 15
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      - run: mkdir staging/TS3Bot && cp target/TS3Bot/* staging/TS3Bot

      - name: Extract Project version
        id: project
        run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

      - uses: actions/upload-artifact@v1
        with:
          name: Release-${{ steps.project.outputs.version }}
          path: staging

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            staging/*
            staging/TS3Bot/*
          tag_name: latest
          name: Release-${{ steps.project.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}